good_gs=rbind(GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$positive,
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$negative)
meta <- readRDS("../ml_inputs/mouse_metadata.RData")
y=as.character(meta$Environment)
y[y=="lab"]<-1
y[y=="wild"]<-2
y=as.numeric(y)
GSA.obj<-GSA(x,y, genenames = rownames(x), genesets=custom_genesets[[1]],
resp.type="Two class unpaired", nperms=100, minsize = 10)
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)
GSA.plot(GSA.obj)
good_gs=rbind(GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$positive,
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$negative)
### make subnetworks!
good_gs
y=as.character(meta$Environment)
y[y=="lab"]<-1
y[y=="wild"]<-2
y=as.numeric(y)
GSA.obj<-GSA(x,y, genenames = rownames(x), genesets=custom_genesets[[1]],
resp.type="Two class unpaired", nperms=100, minsize = 10)
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)
GSA.plot(GSA.obj)
good_gs=rbind(GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$positive,
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$negative)
good_gs
good_gs=rbind(GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)$positive,
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)$negative)
i=2
good_genes <- custom_genesets[[1]][[as.numeric(good_gs[i,1])]]
good_genes
i=3
custom_genesets[[1]][[as.numeric(good_gs[i,1])]]
i=4
custom_genesets[[1]][[as.numeric(good_gs[i,1])]]
### make subnetworks!
good_gs
for(i in 1:nrow(good_gs)){
good_genes <- custom_genesets[[1]][[as.numeric(good_gs[i,1])]]
new_ids <- rownames(net_mat_og)[which(rownames(net_mat_og)%in%good_genes)]
new_net <- net_mat_og[new_ids,new_ids]
up_feat <- mats[[2]][new_ids,]
network=graph_from_adjacency_matrix(new_net, weighted=T, mode="undirected", diag=T)
icoord = layout_with_fr(network)
add.alpha <- function(col, alpha=1){
if(missing(col))
stop("Please provide a vector of colours.")
apply(sapply(col, col2rgb)/255, 2,
function(x)
rgb(x[1], x[2], x[3], alpha=alpha))
}
E(network)$color[E(network)$weight > 0] <- add.alpha('red', alpha=0.2)
E(network)$color[E(network)$weight < 0] <- add.alpha('blue', alpha=0.2)
#up_feat <- feats_df[rownames(new_net),]
my_color=coul[as.numeric(as.factor(up_feat$dataType))]
# plot
curr_coord = icoord
new_coord = data.frame(curr_coord, up_feat)
colnames(new_coord) <- c("X", "Y", 'Feature', "DataType")
#library(ggplot2)
#ggplot(new_coord, aes(X,Y,color=DataType)) +
#  geom_point()
gs = as.character(unique(new_coord$DataType))
gs=c("genes", "cells", "cytokines", "otus")
better_coords <- data.frame(X=NA,Y=NA,Feature=NA,DataType=NA,X2=NA,Y2=NA)
low_bounds_y=c(250,800,250,0)
high_bounds_y=c(700,950,700,200)
low_bounds_x=c(0,300,700,300)
high_bounds_x=c(300,700,1000,700)
for(j in 1:length(gs)){
curr <- subset(new_coord, DataType == gs[j])
x2 = sample(low_bounds_x[j]:high_bounds_x[j], nrow(curr))
y2 = sample(low_bounds_y[j]:high_bounds_y[j], nrow(curr), replace = T)
curr$X2=x2
curr$Y2=y2
better_coords = rbind(better_coords, curr)
}
better_coords=better_coords[-1,]
#ggplot(better_coords, aes(X2,Y2,color=DataType)) +
#  geom_point()
better_coords=better_coords[rownames(new_coord),]
namer=paste0("lab_wild/top_network_num_", i, ".pdf")
pdf(namer, height = 20, width = 20)
par(bg="white", mar=c(0,0,0,0))
set.seed(4)
plot(network, layout=as.matrix(better_coords[,5:6]),
vertex.size=10,
vertex.color=my_color,
vertex.label.cex=1.2,
vertex.label.family="Helvetica",
vertex.label.color="black",
vertex.frame.color="transparent"
)
dev.off()
new_x <- x[good_genes,]
namer=paste0("lab_wild/top_network_heat_num_", i, ".pdf")
pdf(namer, height = 8, width = 15)
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh=Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 6),
heatmap_legend_param=list(title = ""))
print(hh)
dev.off()
}
y=as.character(meta$Pregnant)
y[y=="Y"]<-2
y[y=="N"]<-1
y=as.numeric(y)
GSA.obj<-GSA(x,y, genenames = rownames(x), genesets=custom_genesets[[1]],
resp.type="Two class unpaired", nperms=100, minsize = 10)
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)
good_gs=rbind(GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$positive,
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.5)$negative)
### make subnetworks!
good_gs
for(i in 1:nrow(good_gs)){
good_genes <- custom_genesets[[1]][[as.numeric(good_gs[i,1])]]
new_ids <- rownames(net_mat_og)[which(rownames(net_mat_og)%in%good_genes)]
new_net <- net_mat_og[new_ids,new_ids]
up_feat <- mats[[2]][new_ids,]
network=graph_from_adjacency_matrix(new_net, weighted=T, mode="undirected", diag=T)
icoord = layout_with_fr(network)
add.alpha <- function(col, alpha=1){
if(missing(col))
stop("Please provide a vector of colours.")
apply(sapply(col, col2rgb)/255, 2,
function(x)
rgb(x[1], x[2], x[3], alpha=alpha))
}
E(network)$color[E(network)$weight > 0] <- add.alpha('red', alpha=0.2)
E(network)$color[E(network)$weight < 0] <- add.alpha('blue', alpha=0.2)
#up_feat <- feats_df[rownames(new_net),]
my_color=coul[as.numeric(as.factor(up_feat$dataType))]
# plot
curr_coord = icoord
new_coord = data.frame(curr_coord, up_feat)
colnames(new_coord) <- c("X", "Y", 'Feature', "DataType")
#library(ggplot2)
#ggplot(new_coord, aes(X,Y,color=DataType)) +
#  geom_point()
gs = as.character(unique(new_coord$DataType))
gs=c("genes", "cells", "cytokines", "otus")
better_coords <- data.frame(X=NA,Y=NA,Feature=NA,DataType=NA,X2=NA,Y2=NA)
low_bounds_y=c(250,800,250,0)
high_bounds_y=c(700,950,700,200)
low_bounds_x=c(0,300,700,300)
high_bounds_x=c(300,700,1000,700)
for(j in 1:length(gs)){
curr <- subset(new_coord, DataType == gs[j])
x2 = sample(low_bounds_x[j]:high_bounds_x[j], nrow(curr))
y2 = sample(low_bounds_y[j]:high_bounds_y[j], nrow(curr), replace = T)
curr$X2=x2
curr$Y2=y2
better_coords = rbind(better_coords, curr)
}
better_coords=better_coords[-1,]
#ggplot(better_coords, aes(X2,Y2,color=DataType)) +
#  geom_point()
better_coords=better_coords[rownames(new_coord),]
namer=paste0("lab_wild/top_network_num_", i, ".pdf")
pdf(namer, height = 20, width = 20)
par(bg="white", mar=c(0,0,0,0))
set.seed(4)
plot(network, layout=as.matrix(better_coords[,5:6]),
vertex.size=10,
vertex.color=my_color,
vertex.label.cex=1.2,
vertex.label.family="Helvetica",
vertex.label.color="black",
vertex.frame.color="transparent"
)
dev.off()
new_x <- x[good_genes,]
namer=paste0("lab_wild/top_network_heat_num_", i, ".pdf")
pdf(namer, height = 8, width = 15)
va <- columnAnnotation(df = data.frame(Environment=meta$Pregnant,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c("Y" = "red3", "N" = "mediumorchid3")))
hh=Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 6),
heatmap_legend_param=list(title = ""))
print(hh)
dev.off()
}
colnames(otus)=make.names(colnames(otus))
x=data.frame(rbind(t(genes), t(cytokines), t(cells), t(otus)))
colnames(x) <- gsub("X", "", colnames(x))
meta <- readRDS("../ml_inputs/mouse_metadata.RData")
y=as.character(meta$Environment)
y[y=="lab"]<-1
y[y=="wild"]<-2
y=as.numeric(y)
GSA.obj<-GSA(x,y, genenames = rownames(x), genesets=custom_genesets[[1]],
resp.type="Two class unpaired", nperms=100, minsize = 10)
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)
GSA.plot(GSA.obj)
good_gs=rbind(GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)$positive,
GSA.listsets(GSA.obj, geneset.names=gnames,FDRcut=0.7)$negative)
### make subnetworks!
good_gs
for(i in 1:nrow(good_gs)){
good_genes <- custom_genesets[[1]][[as.numeric(good_gs[i,1])]]
new_ids <- rownames(net_mat_og)[which(rownames(net_mat_og)%in%good_genes)]
new_net <- net_mat_og[new_ids,new_ids]
up_feat <- mats[[2]][new_ids,]
network=graph_from_adjacency_matrix(new_net, weighted=T, mode="undirected", diag=T)
icoord = layout_with_fr(network)
add.alpha <- function(col, alpha=1){
if(missing(col))
stop("Please provide a vector of colours.")
apply(sapply(col, col2rgb)/255, 2,
function(x)
rgb(x[1], x[2], x[3], alpha=alpha))
}
E(network)$color[E(network)$weight > 0] <- add.alpha('red', alpha=0.2)
E(network)$color[E(network)$weight < 0] <- add.alpha('blue', alpha=0.2)
#up_feat <- feats_df[rownames(new_net),]
my_color=coul[as.numeric(as.factor(up_feat$dataType))]
# plot
curr_coord = icoord
new_coord = data.frame(curr_coord, up_feat)
colnames(new_coord) <- c("X", "Y", 'Feature', "DataType")
#library(ggplot2)
#ggplot(new_coord, aes(X,Y,color=DataType)) +
#  geom_point()
gs = as.character(unique(new_coord$DataType))
gs=c("genes", "cells", "cytokines", "otus")
better_coords <- data.frame(X=NA,Y=NA,Feature=NA,DataType=NA,X2=NA,Y2=NA)
low_bounds_y=c(250,800,250,0)
high_bounds_y=c(700,950,700,200)
low_bounds_x=c(0,300,700,300)
high_bounds_x=c(300,700,1000,700)
for(j in 1:length(gs)){
curr <- subset(new_coord, DataType == gs[j])
x2 = sample(low_bounds_x[j]:high_bounds_x[j], nrow(curr))
y2 = sample(low_bounds_y[j]:high_bounds_y[j], nrow(curr), replace = T)
curr$X2=x2
curr$Y2=y2
better_coords = rbind(better_coords, curr)
}
better_coords=better_coords[-1,]
#ggplot(better_coords, aes(X2,Y2,color=DataType)) +
#  geom_point()
better_coords=better_coords[rownames(new_coord),]
namer=paste0("lab_wild/top_network_num_", i, ".pdf")
pdf(namer, height = 20, width = 20)
par(bg="white", mar=c(0,0,0,0))
set.seed(4)
plot(network, layout=as.matrix(better_coords[,5:6]),
vertex.size=10,
vertex.color=my_color,
vertex.label.cex=1.2,
vertex.label.family="Helvetica",
vertex.label.color="black",
vertex.frame.color="transparent"
)
dev.off()
new_x <- x[good_genes,]
namer=paste0("lab_wild/top_network_heat_num_", i, ".pdf")
pdf(namer, height = 8, width = 15)
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh=Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 6),
heatmap_legend_param=list(title = ""))
print(hh)
dev.off()
}
####
setwd("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_stimulations")
library(ComplexHeatmap)
library(ggplot2)
library(reshape)
library(circlize)
library(gridExtra)
stims <- read.table("MLN_stimulation_flat.txt", T)
stim_melt <- melt(stims, measure.vars = colnames(stims)[-1], id.vars = colnames(stims)[1])
stim_melt$cytokine <- gsub("_.*", "", stim_melt$variable)
stim_melt$stimulation <- gsub(".*_", "", stim_melt$variable)
#
#
#
#
#
#### figure 2A log fold change of each cytokine as compared to PBS
meta <- read.table("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/metadata/mice_metadata.11.19_mouse_id.txt",
header=T, sep='\t')
rownames(meta) <- as.character(meta$mouse_id)
cyt_keep <- intersect(unique(stim_melt$mouse_id), meta$mouse_id)
meta <- meta[cyt_keep,]
stims <- unlist(unique(stim_melt$stimulation))
stims=stims[stims!="PBS"]
cyts <- unlist(unique(stim_melt$cytokine))
fc_df <- data.frame(stim_melt[1,], mult=NA, fc=NA)
for (i in 1:length(stims)){
for(j in 1:length(cyts)){
df = subset(stim_melt, stimulation == stims[i] & cytokine == cyts[j])
pbs = subset(stim_melt, stimulation == "PBS" & cytokine == cyts[j])
rownames(df) <- df$mouse_id
rownames(pbs) <- pbs$mouse_id
df[df==0]<-1
pbs[pbs==0]<-1
pbs <- pbs[rownames(df),]
mult <- ((pbs$value-df$value)/pbs$value)
df$mult <- -1
df$mult[mult<0]<- 1
df$fc <- log2((abs((pbs$value-df$value)/pbs$value))+1)
df$fc <- df$fc*df$mult
fc_df <- rbind(fc_df, df)
}
}
fc_df = fc_df[-1,]
fc_mean <- aggregate(data = fc_df, fc ~ cytokine + stimulation, "mean")
fc_heat <- cast(fc_mean,  stimulation ~ cytokine)
rownames(fc_heat) <- fc_heat[,1]
fc_heat = data.frame(fc_heat[,-1])
colnames(fc_heat) <- gsub("\\.", "-", colnames(fc_heat))
labs = colnames(fc_heat)
ll <- columnAnnotation(labels = anno_text(labs, #gp=gpar(fontsize=5),
which = "column", rot=45,
just = 'right', offset=unit(1.6,"cm")),
height = unit(1.6,"cm"))
fc_mean <- aggregate(data = fc_df, fc ~ cytokine + stimulation + mouse_id, "mean")
fc_heat <- cast(fc_mean,  mouse_id ~ stimulation + cytokine)
rownames(fc_heat) <- fc_heat[,1]
fc_heat = data.frame(fc_heat[,-1])
meta <- meta[rownames(fc_heat),]
hh <- rowAnnotation(df = data.frame(Environment=meta$Environment, Genetics=meta$Genotype),
col = list(Environment = c(lab = "mediumorchid3",
wild = "red3"),
Genetics = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen")))
labs = colnames(fc_heat)
ll <- columnAnnotation(labels = anno_text(labs, gp=gpar(fontsize=5),
which = "column", rot=60,
just = 'right', offset=unit(1.4,"cm")),
height = unit(1.4,"cm"))
fc_mean <- aggregate(data = fc_df, fc ~ cytokine + stimulation + mouse_id, "mean")
fc_heat <- cast(fc_mean,  mouse_id ~ stimulation + cytokine)
rownames(fc_heat) <- fc_heat[,1]
fc_heat = data.frame(fc_heat[,-1])
meta <- meta[rownames(fc_heat),]
fc_heat <- cbind(fc_heat, meta$Genotype, meta$Environment)
fc_melt <- melt(fc_heat, measure.vars = colnames(fc_heat)[1:91], id.vars = colnames(fc_heat)[92:93])
fc_melt$combo <- paste0(fc_melt$`meta$Environment`, ":", fc_melt$`meta$Genotype`)
fc_mean <- aggregate(data = fc_melt, value ~ combo + variable, "mean")
fc_heat <- cast(fc_mean,  combo ~ variable)
rownames(fc_heat) <- fc_heat[,1]
fc_heat = data.frame(fc_heat[,-1])
labs = colnames(fc_heat)
ll <- columnAnnotation(labels = anno_text(labs, gp=gpar(fontsize=5),
which = "column", rot=60,
just = 'right', offset=unit(1.7,"cm")),
height = unit(1.7,"cm"))
#
#
#
#
#
#
# fold change radars?
fc_mean <- aggregate(data = fc_df, fc ~ cytokine + stimulation + mouse_id, "mean")
fc_heat <- cast(fc_mean,  mouse_id ~ stimulation + cytokine)
rownames(fc_heat) <- fc_heat[,1]
fc_heat = data.frame(fc_heat[,-1])
meta <- meta[rownames(fc_heat),]
fc_heat <- cbind(fc_heat, meta$Genotype, meta$Environment, meta$mouse_id)
fc_melt <- melt(fc_heat, measure.vars = colnames(fc_heat)[1:91], id.vars = colnames(fc_heat)[92:94])
fc_melt$cytokine <- gsub(".*_", "", fc_melt$variable)
fc_melt$challenge <- gsub("_.*", "", fc_melt$variable)
colnames(fc_melt)[1:3] <- c("Genotype", "Environment", "mouse_id")
challenges <- c("BacillusS","BacteroidesV","CandidaA",
"CD3.CD28","ClostridiumP","PseudomonasA",
"StaphA")
orderer <- fc_melt[order(fc_melt$value, decreasing = T),]
orderer <- unique(orderer$cytokine)
orderer <- gsub("\\.", "-", orderer)
glist = list()
for (j in 1:length(challenges)){
full_df2 <- subset(fc_melt, challenge == challenges[j])
nums2 <- full_df2$value
stuff <- full_df2$Environment
cyto <- full_df2$cytokine
plotter <- data.frame(stuff, cyto, nums2)
plotter_slim <- aggregate(plotter$nums2, list(plotter$stuff, plotter$cyto),mean)
colnames(plotter_slim) <- c("Environment", "cyto", 'nums')
plotter_slim$Environment <- factor(plotter_slim$Environment, levels = c("wild", "lab"))
plotter_slim$cyto <- gsub("\\.", "-", plotter_slim$cyto)
plotter_slim=plotter_slim[order(plotter_slim$nums, decreasing = T),]
plotter_slim$cyto <- factor(plotter_slim$cyto, levels = rev(orderer))
plotter_slim=plotter_slim[order(plotter_slim$cyto, decreasing = T),]
#plotter_slim$labelery <- rep(max(plotter_slim$nums), nrow(plotter_slim))
plotter_slim$labelery <- rep(6, nrow(plotter_slim))
plotter_slim$labelerx <- ""
for(i in 1:nrow(plotter_slim)){
if(plotter_slim$Environment[i]=="wild"){
plotter_slim$labelerx[i]<-as.character(plotter_slim$cyto[i])
}
}
#plotter_slim$nums[plotter_slim$nums>6] <- 6
#filenamer <- paste0("radars/radar_plot_", challenges[j], ".pdf")
#pdf(filenamer)
glist[[j]] <- ggplot(plotter_slim, aes(x=cyto, y=nums)) +
geom_polygon(aes(group = Environment, color = Environment,fill = Environment),
alpha=0.4, size = 1, show.legend = TRUE) +
coord_polar(clip='on')+
#scale_y_continuous(limits = c(0,6)) +
geom_text(data=plotter_slim, aes(x=cyto, y=labelery, label=labelerx), size = 5) +
scale_color_manual(values = c("red3", "mediumpurple1"))+
scale_fill_manual(values = c("red3", "mediumpurple1"))+
xlab("Cytokines") + ylab("Log2 FoldChange") +
ggtitle(challenges[j]) +
theme(
panel.background = element_rect(fill='white'),
#plot.margin=margin(10, 10, 5, 5),
panel.grid.major = element_line(color='grey92'),
axis.text.x=element_blank(),
axis.text.y = element_text(size = 12, color = 'black'),
axis.title = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size=15))
#print(g)
#dev.off()
}
pdf("all_radars_fc_7.10.pdf", height = 8, width = 22)
grid.arrange(glist[[1]], glist[[2]], glist[[3]],
glist[[4]], glist[[5]], glist[[6]],
glist[[7]], ncol = 4)
dev.off()
glist = list()
for (j in 1:length(challenges)){
full_df2 <- subset(fc_melt, challenge == challenges[j])
nums2 <- full_df2$value
stuff <- full_df2$Environment
cyto <- full_df2$cytokine
plotter <- data.frame(stuff, cyto, nums2)
plotter_slim <- aggregate(plotter$nums2, list(plotter$stuff, plotter$cyto),mean)
colnames(plotter_slim) <- c("Environment", "cyto", 'nums')
plotter_slim$Environment <- factor(plotter_slim$Environment, levels = c("wild", "lab"))
plotter_slim$cyto <- gsub("\\.", "-", plotter_slim$cyto)
plotter_slim=plotter_slim[order(plotter_slim$nums, decreasing = T),]
plotter_slim$cyto <- factor(plotter_slim$cyto, levels = rev(orderer))
plotter_slim=plotter_slim[order(plotter_slim$cyto, decreasing = T),]
plotter_slim$labelery <- rep(max(plotter_slim$nums), nrow(plotter_slim))
#plotter_slim$labelery <- rep(6, nrow(plotter_slim))
plotter_slim$labelerx <- ""
for(i in 1:nrow(plotter_slim)){
if(plotter_slim$Environment[i]=="wild"){
plotter_slim$labelerx[i]<-as.character(plotter_slim$cyto[i])
}
}
#plotter_slim$nums[plotter_slim$nums>6] <- 6
#filenamer <- paste0("radars/radar_plot_", challenges[j], ".pdf")
#pdf(filenamer)
glist[[j]] <- ggplot(plotter_slim, aes(x=cyto, y=nums)) +
geom_polygon(aes(group = Environment, color = Environment,fill = Environment),
alpha=0.4, size = 1, show.legend = TRUE) +
coord_polar(clip='on')+
#scale_y_continuous(limits = c(0,6)) +
geom_text(data=plotter_slim, aes(x=cyto, y=labelery, label=labelerx), size = 5) +
scale_color_manual(values = c("red3", "mediumpurple1"))+
scale_fill_manual(values = c("red3", "mediumpurple1"))+
xlab("Cytokines") + ylab("Log2 FoldChange") +
ggtitle(challenges[j]) +
theme(
panel.background = element_rect(fill='white'),
#plot.margin=margin(10, 10, 5, 5),
panel.grid.major = element_line(color='grey92'),
axis.text.x=element_blank(),
axis.text.y = element_text(size = 12, color = 'black'),
axis.title = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size=15))
#print(g)
#dev.off()
}
pdf("all_radars_fc_7.10.pdf", height = 8, width = 22)
grid.arrange(glist[[1]], glist[[2]], glist[[3]],
glist[[4]], glist[[5]], glist[[6]],
glist[[7]], ncol = 4)
dev.off()
