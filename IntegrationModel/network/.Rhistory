#plotter_slim$labelery <- rep(6, nrow(plotter_slim))
plotter_slim$labelerx <- ""
for(i in 1:nrow(plotter_slim)){
if(plotter_slim$Environment[i]=="wild"){
plotter_slim$labelerx[i]<-as.character(plotter_slim$cyto[i])
}
}
#plotter_slim$nums[plotter_slim$nums>6] <- 6
#filenamer <- paste0("radars/radar_plot_", challenges[j], ".pdf")
#pdf(filenamer)
glist[[j]] <- ggplot(plotter_slim, aes(x=cyto, y=nums)) +
geom_polygon(aes(group = Environment, color = Environment,fill = Environment),
alpha=0.4, size = 1, show.legend = TRUE) +
coord_polar(clip='on')+
#scale_y_continuous(limits = c(0,6)) +
geom_text(data=plotter_slim, aes(x=cyto, y=labelery, label=labelerx), size = 5) +
scale_color_manual(values = c("red3", "mediumpurple1"))+
scale_fill_manual(values = c("red3", "mediumpurple1"))+
xlab("Cytokines") + ylab("Log2 FoldChange") +
ggtitle(challenges[j]) +
theme(
panel.background = element_rect(fill='white'),
#plot.margin=margin(10, 10, 5, 5),
panel.grid.major = element_line(color='grey92'),
axis.text.x=element_blank(),
axis.text.y = element_text(size = 12, color = 'black'),
axis.title = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size=15))
#print(g)
#dev.off()
}
fc_mean <- aggregate(data = fc_df, fc ~ cytokine + stimulation + mouse_id, "mean")
fc_heat <- cast(fc_mean,  mouse_id ~ stimulation + cytokine)
rownames(fc_heat) <- fc_heat[,1]
fc_heat = data.frame(fc_heat[,-1])
meta <- meta[rownames(fc_heat),]
fc_heat <- cbind(fc_heat, meta$Genotype, meta$Environment, meta$mouse_id)
fc_melt <- melt(fc_heat, measure.vars = colnames(fc_heat)[1:91], id.vars = colnames(fc_heat)[92:94])
fc_melt$cytokine <- gsub(".*_", "", fc_melt$variable)
fc_melt$challenge <- gsub("_.*", "", fc_melt$variable)
colnames(fc_melt)[1:3] <- c("Genotype", "Environment", "mouse_id")
challenges <- c("BacillusS","BacteroidesV","CandidaA",
"CD3.CD28","ClostridiumP","PseudomonasA",
"StaphA")
orderer <- fc_melt[order(fc_melt$value, decreasing = T),]
orderer <- unique(orderer$cytokine)
orderer <- gsub("\\.", "-", orderer)
top_cyt_diff <- data.frame(cyt=NA, stim=NA, lab=NA, wild=NA, diff=NA,pvalue=NA, vars=NA)
for (j in 1:length(challenges)){
full_df2 <- subset(fc_melt, challenge == challenges[j])
nums2 <- full_df2$value
stuff <- full_df2$Environment
cyto <- full_df2$cytokine
plotter <- data.frame(stuff, cyto, nums2)
##pause for stats
stats = c()
vars=c()
for(k in 1:length(unique(plotter$cyto))) {
statter <- subset(plotter, cyto == unique(plotter$cyto)[k])
stats=c(stats,wilcox.test(nums2 ~ stuff, data=statter)$p.value)
vars=c(vars,var(statter$nums2))
}
#
plotter_slim <- aggregate(plotter$nums2, list(plotter$stuff, plotter$cyto),mean)
colnames(plotter_slim) <- c("Environment", "cyto", 'nums')
plotter_slim$Environment <- factor(plotter_slim$Environment, levels = c("wild", "lab"))
plotter_slim$cyto <- gsub("\\.", "-", plotter_slim$cyto)
plotter_slim$stim = challenges[j]
plotter_cast <- cast(plotter_slim, cyto + stim ~ Environment, value = "nums")
diff = plotter_cast$wild-plotter_cast$lab
adder <- data.frame(cyt=plotter_cast$cyto, stim=plotter_cast$stim,
lab=plotter_cast$lab, wild=plotter_cast$wild, diff=diff, pvalue=stats,vars=vars)
top_cyt_diff <- rbind(top_cyt_diff, adder)
}
top_cyt_diff <- top_cyt_diff[-1,]
top_cyt_diff<- top_cyt_diff[order(top_cyt_diff$diff, decreasing = T),]
top_cyt_diff$cond <- paste0(top_cyt_diff$stim, ":", top_cyt_diff$cyt)
#pause make variance supp sigure
top_cyt_diff2 <- top_cyt_diff[order(top_cyt_diff$vars, decreasing =T),]
top_cyt_diff2$cond <- factor(top_cyt_diff2$cond, levels = rev(as.character(top_cyt_diff2$cond)))
var_plot=ggplot(top_cyt_diff2, aes(cond,
vars)) +
geom_col(fill='grey10') + coord_flip() +
ggtitle("Cytokine:Stimulation Variance") +
scale_color_manual(values="grey10") +
theme_bw() +
ylab("Variance") + xlab("Cytokine:Stimulation") +
theme(axis.title = element_text(size=15),
axis.text = element_text(size=12, color="black"),
legend.position = 'none',
legend.title = element_text(size=15),
legend.text = element_text(size=12, color="black")
)
var_plot
View(top_cyt_diff2)
top_cyt_agg <- aggregate(data=top_cyt_diff2, vars ~ cyt, "mean")
View(top_cyt_agg)
top_cyt_agg$cyt
top_cyt_agg=top_cyt_agg[order(top_cyt_agg$vars, decreasing=T),]
ggplot(top_cyt_agg, aes(cyt,
vars)) +
geom_col(fill='grey10') + coord_flip() +
ggtitle("Cytokine Variance") +
scale_color_manual(values="grey10") +
theme_bw() +
ylab("Variance") + xlab("Cytokine") +
theme(axis.title = element_text(size=15),
axis.text = element_text(size=12, color="black"),
legend.position = 'none',
legend.title = element_text(size=15),
legend.text = element_text(size=12, color="black")
)
top_cyt_agg$cyt
factor(top_cyt_agg$cyt, levels = as.character(top_cyt_agg$cyt))
top_cyt_agg <- aggregate(data=top_cyt_diff2, vars ~ cyt, "mean")
top_cyt_agg=top_cyt_agg[order(top_cyt_agg$vars, decreasing=T),]
top_cyt_agg$cyt <- factor(top_cyt_agg$cyt, levels = as.character(top_cyt_agg$cyt))
ggplot(top_cyt_agg, aes(cyt,
vars)) +
geom_col(fill='grey10') + coord_flip() +
ggtitle("Cytokine Variance") +
scale_color_manual(values="grey10") +
theme_bw()
top_cyt_agg <- aggregate(data=top_cyt_diff2, vars ~ cyt, "mean")
top_cyt_agg=top_cyt_agg[order(top_cyt_agg$vars, decreasing=T),]
top_cyt_agg$cyt <- factor(top_cyt_agg$cyt, levels = rev(as.character(top_cyt_agg$cyt)))
var_plot=ggplot(top_cyt_agg, aes(cyt,
vars)) +
geom_col(fill='grey10') + coord_flip() +
ggtitle("Cytokine Variance") +
scale_color_manual(values="grey10") +
theme_bw() +
ylab("Variance") + xlab("Cytokine") +
theme(axis.title = element_text(size=15),
axis.text = element_text(size=12, color="black"),
legend.position = 'none',
legend.title = element_text(size=15),
legend.text = element_text(size=12, color="black")
)
var_plot
ggplot(top_cyt_agg, aes(cyt,
vars)) +
geom_col(fill='purple4') + coord_flip() +
ggtitle("Cytokine Variance") +
scale_color_manual(values="grey10") +
theme_bw()
ggplot(top_cyt_agg, aes(cyt,
vars)) +
geom_col(fill='green4') + coord_flip() +
ggtitle("Cytokine Variance") +
scale_color_manual(values="grey10") +
theme_bw()
var_plot=ggplot(top_cyt_agg, aes(cyt,
vars)) +
geom_col(fill='grey10') + coord_flip() +
ggtitle("Cytokine Variance") +
scale_color_manual(values="grey10") +
theme_bw() +
ylab("Variance") + xlab("Cytokine") +
theme(axis.title = element_text(size=15),
axis.text = element_text(size=12, color="black"),
legend.position = 'none',
legend.title = element_text(size=15),
legend.text = element_text(size=12, color="black")
)
dim(top_cyt_diff)
13*7
View(top_cyt_diff)
cyt_heat <- cast(top_cyt_diff, measure.vars = "vars", id.vars = c("cyt", "stim"))
cyt_heat <- cast(top_cyt_diff, cyt ~ stim, value = "vars")
View(cyt_heat)
cyt_heat <- cast(top_cyt_diff, cyt ~ stim, value = "vars")
rownames(cyt_heat) <- cyt_heat[,1]
cyt_heat <- cyt_heat[,-1]
max(cyt_heat)
hh=grid.grabExpr(draw(
Heatmap(cyt_heat,
col = colorRamp2(c(0, 10), c("white", "navy")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
Heatmap(matrix(cyt_heat),
col = colorRamp2(c(0, 10), c("white", "navy")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
matrix(cyt_heat)
Heatmap(as.matrix(cyt_heat),
col = colorRamp2(c(0, 10), c("white", "navy")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
cyt_heat <- as.matrix(data.frame(cyt_heat))
Heatmap(cyt_heat,
col = colorRamp2(c(0, 10), c("white", "navy")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
Heatmap(cyt_heat,
col = colorRamp2(c(0, 10), c("white", "navy")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = T,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
hh=grid.grabExpr(draw(
Heatmap(cyt_heat,
col = colorRamp2(c(0, 10), c("white", "navy")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = T,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = "Variance"))
))
pdf("cytokine_variance.pdf", height = 15, width = 15)
grid.arrange(var_plot, hh, nrow=1)
dev.off()
pdf("cytokine_variance.pdf", height = 10, width = 15)
grid.arrange(var_plot, hh, nrow=1)
dev.off()
pdf("cytokine_variance.pdf", height = 7, width = 12)
grid.arrange(var_plot, hh, nrow=1)
dev.off()
pdf("cytokine_variance.pdf", height = 5, width = 10)
grid.arrange(var_plot, hh, nrow=1)
dev.off()
setwd("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/IntegrationModel/network")
library(igraph)
library(ComplexHeatmap)
library(circlize)
library(ggplot2)
library(gridExtra)
library(ggplotify)
library(scales)
library(ggsignif)
genes = readRDS("../ml_inputs/gene_modules.RData")
cytokines = readRDS("../ml_inputs/cytokines.RData")
cells = readRDS("../ml_inputs/facs.RData")
#otus = readRDS("../ml_inputs/otus_relab.RData")
otus = readRDS("../ml_inputs/otus.RData")
p_mats <- list.files("sim_mats", full.names = T, pattern = c("p.adj"))
c_mats <- setdiff(list.files("sim_mats", pattern = c("txt"), full.names = T),p_mats)
source("sim_mat_func.R")
mats = sim_combine(c_mats, p_mats, 0.01)
#
#
#
#
#
net_mat <- mats[[1]]
##filter
net_mat[net_mat<0.6 & net_mat > -0.6]=0
good_cols <- which(colSums(abs(net_mat))>0)
net_mat=net_mat[good_cols,good_cols]
feats_df <- mats[[2]][good_cols,]
#store 4 later
net_mat_og <- net_mat
#
###
# GSA
genesets=list()
num=1
for(i in 1:nrow(net_mat)){
curr = net_mat[i,]
gs=c(rownames(net_mat)[i],rownames(net_mat)[which(curr != 0)])
if(length(gs)>3){
print(length(gs))
genesets[[num]]<-gs
num=num+1
}
}
gnames=paste0("module_", 1:length(genesets))
custom_genesets = list(genesets = genesets, geneset.names = gnames,
geneset.descriptions = gnames)
class(custom_genesets) = "GSA.genesets"
library(GSA)
set.seed(100)
colnames(otus)=make.names(colnames(otus))
x=data.frame(rbind(t(genes), t(cytokines), t(cells), t(otus)))
colnames(x) <- gsub("X", "", colnames(x))
meta <- readRDS("../ml_inputs/mouse_metadata.RData")
y=as.character(meta$Environment)
y[y=="lab"]<-1
y[y=="wild"]<-2
y=as.numeric(y)
getwd()
good_genes
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
View(module_key)
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
#write a function that plots genes from a gene module according to lab/wild and genotype
#load the real genes
gene_mat <- readRDS("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/IntegrationModel/ml_inputs/genes.RData")
gene_mat2 <- t(gene_mat)
gene_mat2 <- gene_mat2[which(rownames(gene_mat2) %in% as.character(module_key$Genes)),]
genes_of_int <- as.character(subset(module_key, module == "39")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
grid.arrange(hh)
genes_of_int <- as.character(subset(module_key, module == "22")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh22=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
dim(gene_mat2)
genes_of_int
setdiff(genes_of_int, rownames(gene_mat2))
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
#write a function that plots genes from a gene module according to lab/wild and genotype
#load the real genes
gene_mat <- readRDS("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/IntegrationModel/ml_inputs/genes.RData")
gene_mat2 <- t(gene_mat)
gene_mat2 <- gene_mat2[which(rownames(gene_mat2) %in% as.character(module_key$Genes)),]
genes_of_int <- as.character(subset(module_key, module == "22")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh22=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
pdf("mods_39_and_22_heats.pdf", height = 5, width = 10)
grid.arrange(hh39, hh22, nrow=1)
dev.off()
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
#write a function that plots genes from a gene module according to lab/wild and genotype
#load the real genes
gene_mat <- readRDS("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/IntegrationModel/ml_inputs/genes.RData")
gene_mat2 <- t(gene_mat)
gene_mat2 <- gene_mat2[which(rownames(gene_mat2) %in% as.character(module_key$Genes)),]
genes_of_int <- as.character(subset(module_key, module == "39")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh39=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
genes_of_int <- as.character(subset(module_key, module == "22")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh22=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
pdf("mods_39_and_22_heats.pdf", height = 5, width = 10)
grid.arrange(hh39, hh22, nrow=1)
dev.off()
#
getwd()
genes_of_int <- as.character(subset(module_key, module == "22")$Genes)
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
#write a function that plots genes from a gene module according to lab/wild and genotype
#load the real genes
gene_mat <- readRDS("/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/IntegrationModel/ml_inputs/genes.RData")
gene_mat2 <- t(gene_mat)
gene_mat2 <- gene_mat2[which(rownames(gene_mat2) %in% as.character(module_key$Genes)),]
genes_of_int <- as.character(subset(module_key, module == "39")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh39=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
genes_of_int <- as.character(subset(module_key, module == "22")$Genes)
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh22=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
pdf("mods_39_and_22_heats.pdf", height = 5, width = 10)
grid.arrange(hh39, hh22, nrow=1)
dev.off()
hh22
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
dim(new_x)
new_x <- gene_mat2[genes_of_int,]
setdiff(genes_of_int, rownames(gene_mat2))
grep("Mar", rownames(gene_mat2))
rownames(gene_mat2)[grep("Mar", rownames(gene_mat2))]
View(module_key)
module_key <- read.table(
"/Volumes/lokep01lab/lokep01labspace/Rewilding_Data/int/data/MLN_RNA_Seq/gene_module_key.txt", T)
View(module_key)
genes_of_int
genes_of_int[-36]
genes_of_int <- as.character(subset(module_key, module == "22")$Genes)
genes_of_int <- genes_of_int[-36]
new_x <- gene_mat2[genes_of_int,]
va <- columnAnnotation(df = data.frame(Environment=meta$Environment,
Genotype=meta$Genotype),
col = list(Genotype = c(AtgW = "darkorange1",
AtgE = "dodgerblue2",
AtgH = "navyblue",
B6 = "darkorange1",
NOD2 = "mediumspringgreen"),
Environment=c(wild = "red3", lab = "mediumorchid3")))
hh22=grid.grabExpr(draw(
Heatmap(t(scale(t(new_x))), top_annotation = va,
col = colorRamp2(c(-2, 0, 2), c("blue", "white", "red")),
cluster_columns = T, cluster_rows = T,
show_row_names = T, show_column_names = F,
row_names_gp = gpar(fontsize = 10),
heatmap_legend_param=list(title = ""))
))
pdf("mods_39_and_22_heats.pdf", height = 5, width = 10)
grid.arrange(hh39, hh22, nrow=1)
dev.off()
pdf("mods_39_and_22_heats.pdf", height = 8, width = 10)
grid.arrange(hh39, hh22, nrow=1)
dev.off()
pdf("mods_39_and_22_heats.pdf", height = 10, width = 8)
grid.arrange(hh39, hh22, nrow=1)
dev.off()
